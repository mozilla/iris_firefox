# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.


from targets.firefox.fx_testcase import *


class Test(FirefoxTest):

    @pytest.mark.details(
        description='Bug 1395733 - Ensure the default value of urlclassifier.malwareTable is always sorted',
        test_case_id='129941',
        test_suite_id='69',
        locale=['en-US'],
        profile=Profiles.BRAND_NEW
    )
    def run(self, firefox):
        warn_about_unwanted_item_pattern = Pattern('warn_about_unwanted_item.png').similar(.6)
        malawaretable_not_bold_pattern = Pattern('malawaretable_not_bold.png')

        home_button_exists = exists(NavBar.HOME_BUTTON)
        assert home_button_exists, 'Home button exists'

        home_button_location = find(NavBar.HOME_BUTTON)
        home_button_width, home_button_height = NavBar.HOME_BUTTON.get_size()
        preference_region = Region(0, home_button_location.y + home_button_height * 4, Screen.SCREEN_WIDTH,
                                   Screen.SCREEN_HEIGHT/3)

        navigate('about:preferences#privacy')

        page_loaded = exists(AboutPreferences.PRIVACY_AND_SECURITY_BUTTON_NOT_SELECTED,
                             FirefoxSettings.SITE_LOAD_TIMEOUT)
        assert page_loaded, 'about:preferences page loaded'

        open_find()

        type('Deceptive')

        warn_about_unwanted_item_checked = find_in_region_from_pattern(warn_about_unwanted_item_pattern,
                                                                       AboutPreferences.CHECKED_BOX)
        assert warn_about_unwanted_item_checked, 'Warn you about unwanted and uncommon software found and checked'

        click(warn_about_unwanted_item_pattern)

        warn_about_unwanted_item_unchecked = find_in_region_from_pattern(warn_about_unwanted_item_pattern,
                                                                         AboutPreferences.UNCHECKED_BOX)
        assert warn_about_unwanted_item_unchecked, 'Warn you about unwanted and uncommon software unchecked'

        click(warn_about_unwanted_item_pattern)

        warn_about_unwanted_item_checked = find_in_region_from_pattern(warn_about_unwanted_item_pattern,
                                                                       AboutPreferences.CHECKED_BOX)
        assert warn_about_unwanted_item_checked, 'Warn you about unwanted and uncommon software checked again'

        preference_sorted = check_preference('urlclassifier.malwareTable',
                                             'goog-malware-proto,goog-unwanted-proto,moztest-harmful-simple,'
                                             'moztest-malware-simple,moztest-unwanted-simple')
        assert preference_sorted, 'The pref is set back to its default value:"goog-malware-proto,' \
                                  'goog-unwanted-proto,test-harmful-simple,test-malware-simple,test-unwanted-simple"'

        malawaretable_not_bold = exists(malawaretable_not_bold_pattern, FirefoxSettings.FIREFOX_TIMEOUT,
                                        preference_region)
        assert malawaretable_not_bold, 'The pref urlclassifier.malwareTable is not bold'
